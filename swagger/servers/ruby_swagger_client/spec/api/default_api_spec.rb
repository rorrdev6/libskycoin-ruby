=begin
#Skycoin REST API.

#Skycoin is a next-generation cryptocurrency.

OpenAPI spec version: 0.25.0
Contact: skycoin.doe@example.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for address_count
  # Returns the total number of unique address that have coins.
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'address_count test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for coin_supply
  # 
  # coinSupplyHandler returns coin distribution supply stats
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'coin_supply test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for csrf
  # Creates a new CSRF token. Previous CSRF tokens are invalidated by this call.
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2001]
  describe 'csrf test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for default_connections
  # defaultConnectionsHandler returns the list of default hardcoded bootstrap addresses.\\n They are not necessarily connected to.
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'default_connections test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for health
  # Returns node health data.
  # 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'health test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_connection
  # This endpoint returns a specific connection.
  # 
  # @param addr Address port
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'network_connection test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_connections
  # This endpoint returns all outgoings connections.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :states Connection status.
  # @option opts [String] :direction Direction of the connection.
  # @return [Array<InlineResponse2003>]
  describe 'network_connections test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_connections_disconnect
  # 
  # This endpoint disconnects a connection by ID or address
  # @param id Address id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'network_connections_disconnect test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_connections_exchange
  # 
  # This endpoint returns all connections found through peer exchange
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'network_connections_exchange test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for network_connections_trust
  # trustConnectionsHandler returns all trusted connections.\\n They are not necessarily connected to. In the default configuration, these will be a subset of the default hardcoded bootstrap addresses.
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'network_connections_trust test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resend_unconfirmed_txns
  # 
  # Broadcasts all unconfirmed transactions from the unconfirmed transaction pool
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'resend_unconfirmed_txns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_address
  # healthHandler returns node health data.
  # 
  # @param address Address id.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2009]
  describe 'verify_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for version
  # 
  # versionHandler returns the application version info
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'version test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet
  # Returns a wallet by id.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id tags to filter by
  # @return [WalletMeta]
  describe 'wallet test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_balance
  # Returns the wallet&#39;s balance, both confirmed and predicted.  The predicted balance is the confirmed balance minus the pending spends.
  # 
  # @param id tags to filter by
  # @param [Hash] opts the optional parameters
  # @return [InlineResponseDefault]
  describe 'wallet_balance test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_folder
  # 
  # Returns the wallet directory path
  # @param addr Address port
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2008]
  describe 'wallet_folder test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_new_address
  # 
  # Generates new addresses
  # @param id Wallet Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :num The number you want to generate
  # @option opts [String] :password Wallet Password
  # @return [InlineResponse2004]
  describe 'wallet_new_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_new_seed
  # 
  # Returns the wallet directory path
  # @param [Hash] opts the optional parameters
  # @option opts [String] :entropy Entropy bitSize.
  # @return [InlineResponse2005]
  describe 'wallet_new_seed test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_seed
  # This endpoint only works for encrypted wallets. If the wallet is unencrypted, The seed will be not returned.
  # 
  # @param id Wallet Id.
  # @param password Wallet password.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'wallet_seed test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallet_update
  # Update the wallet.
  # 
  # @param id Wallet Id.
  # @param label The label the wallet will be updated to.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'wallet_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for wallets
  # 
  # Returns all loaded wallets
  # @param [Hash] opts the optional parameters
  # @return [Array<InlineResponse2007>]
  describe 'wallets test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
