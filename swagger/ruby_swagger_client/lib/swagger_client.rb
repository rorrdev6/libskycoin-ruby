=begin
#Skycoin REST API.

#Skycoin is a next-generation cryptocurrency.

OpenAPI spec version: 0.25.0
Contact: skycoin.doe@example.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/apiv1wallets_entries'
require 'swagger_client/models/apiv1wallets_meta'
require 'swagger_client/models/inline_response_200'
require 'swagger_client/models/inline_response_200_1'
require 'swagger_client/models/inline_response_200_1_csrf_token'
require 'swagger_client/models/inline_response_200_2'
require 'swagger_client/models/inline_response_200_2_blockchain'
require 'swagger_client/models/inline_response_200_2_blockchain_head'
require 'swagger_client/models/inline_response_200_2_unconfirmed_verify_transaction'
require 'swagger_client/models/inline_response_200_2_version'
require 'swagger_client/models/inline_response_200_3'
require 'swagger_client/models/inline_response_200_3_unconfirmed_verify_transaction'
require 'swagger_client/models/inline_response_200_4'
require 'swagger_client/models/inline_response_200_5'
require 'swagger_client/models/inline_response_200_6'
require 'swagger_client/models/inline_response_200_7'
require 'swagger_client/models/inline_response_200_8'
require 'swagger_client/models/inline_response_200_9'
require 'swagger_client/models/inline_response_200_9_data'
require 'swagger_client/models/inline_response_default'
require 'swagger_client/models/wallet_entry'
require 'swagger_client/models/wallet_meta'

# APIs
require 'swagger_client/api/default_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
